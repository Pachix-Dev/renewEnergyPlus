---
import i18next, { t, changeLanguage } from "i18next";
import LayoutFreeContent from "../../../layouts/LayoutFreeContent.astro";
import { Speaker } from "../../../components/program-free/Speaker.jsx";
import { installerInnovation } from "../../../data/constans_installer_innovation";

changeLanguage("en");

const language = i18next.language;
---

<LayoutFreeContent title={`RE+ MEXICO | Enligtenment Area`}>
  <main class='mx-5 md:mx-16 lg:mx-32 pb-5'>
    <h1
      class='text-left text-[#ed6b06] text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-extrabold py-5'
    >
      Installer Innovation Area
    </h1>

    <p class='text-xl justify-center'>
      <strong>RE+ MEXICO </strong>{t('installer_innovationArea.description')}
    </p>
    <section class='mt-10'>
      <div class='mb-4 border-b border-gray-200'>
        <ul
          class='flex flex-wrap -mb-px text-sm font-medium text-center'
          id='default-styled-tab'
          data-tabs-toggle='#default-styled-tab-content'
          role='tablist'
        >
          <li class='me-2' role='presentation'>
            <button
              class='inline-block p-4 border-b-2 rounded-t-lg'
              id='profile-tab'
              data-tabs-target='#profile'
              type='button'
              role='tab'
              aria-controls='profile'
              aria-selected='false'
            >
              {t('program.day_1')}
            </button>
          </li>
          <li class='me-2' role='presentation'>
            <button
              class='inline-block p-4 border-b-2 rounded-t-lg hover:text-gray-600 hover:border-gray-300'
              id='dashboard-tab'
              data-tabs-target='#dashboard'
              type='button'
              role='tab'
              aria-controls='dashboard'
              aria-selected='false'>{t('program.day_2')}</button
            >
          </li>
         
        </ul>
      </div>

  
      <div id='default-tab-content'>
        <div class='hidden p-6 rounded-lg' id='profile' role='tabpanel' aria-labelledby='profile-tab'>
          {installerInnovation.day_1.map((conference) => (
            <div class="shadow-lg p-8 rounded-xl my-6 text-black flex flex-col gap-6 bg-white border border-gray-200">
              
              <div class="flex items-center gap-3 text-base md:text-lg font-semibold text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 md:size-8 text-custom-orange">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                </svg>
                <span>{conference.hour}</span>
              </div>
              
              <div class="flex-1">
                <h2 class="text-xl md:text-3xl font-bold text-center md:text-left text-gray-900 mb-4">
                  {i18next.language === 'es' ? conference.title : conference.title_en}
                </h2>
                <p class="text-base md:text-lg text-gray-700 text-justify leading-relaxed">
                  {i18next.language === 'es' ? conference.resume : conference.resume_en}
                </p>
              </div>
                              
                              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {conference.speakers?.map((speaker) => (
                    <div  class="flex flex-col items-center text-center bg-gray-900 p-6 rounded-xl shadow-md">
                      <span class="text-gray-300 text-sm">{speaker.horain}</span>
                      
                      <Speaker speaker={speaker} language={language} client:load />
                      
                      {speaker.subtitle && (
                        <div class="text-sm md:text-lg font-medium mt-3 text-custom-orange">
                          {i18next.language === 'es' ? speaker.subtitle : speaker.subtitle_en}
                        </div>
                      )}
                      
                      <h1 class="flex items-center justify-center w-full text-white text-base md:text-lg font-semibold mt-3 bg-custom-orange p-3 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 md:w-6 md:h-6 mr-2">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z" />
                        </svg>
                        {speaker.name}
                      </h1>
                    </div>
                  ))}
                </div>
            </div>
          ))}
        </div>
      </div>
      

      <div
        class='hidden p-4 rounded-lg'
        id='dashboard'
        role='tabpanel'
        aria-labelledby='dashboard-tab'
      >
      {installerInnovation.day_2.map((conference) => (
        <div class="shadow-lg p-8 rounded-xl my-6 text-black flex flex-col gap-6 bg-white border border-gray-200">
          
          <div class="flex items-center gap-3 text-base md:text-lg font-semibold text-gray-700">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 md:size-8 text-custom-orange">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>
            <span>{conference.hour}</span>
          </div>
          
          <div class="flex-1">
            <h2 class="text-xl md:text-3xl font-bold text-center md:text-left text-gray-900 mb-4">
              {i18next.language === 'es' ? conference.title : conference.title_en}
            </h2>
            <p class="text-base md:text-lg text-gray-700 text-justify leading-relaxed">
              {i18next.language === 'es' ? conference.resume : conference.resume_en}
            </p>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
{conference.speakers?.map((speaker) => (
<div  class="flex flex-col items-center text-center bg-gray-900 p-6 rounded-xl shadow-md">
  <span class="text-gray-300 text-sm">{speaker.horain}</span>
  
  <Speaker speaker={speaker} language={language} client:load />
  
  {speaker.subtitle && (
    <div class="text-sm md:text-lg font-medium mt-3 text-custom-orange">
      {i18next.language === 'es' ? speaker.subtitle : speaker.subtitle_en}
    </div>
  )}
  
  <h1 class="flex items-center justify-center w-full text-white text-base md:text-lg font-semibold mt-3 bg-custom-orange p-3 rounded-lg">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 md:w-6 md:h-6 mr-2">
      <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z" />
    </svg>
    {speaker.name}
  </h1>
</div>
))}
</div>
        </div>
      ))}
    </div>
  </div>
  


    <div
      class='hidden p-4 rounded-lg mx-auto'
      id='settings'
      role='tabpanel'
      aria-labelledby='settings-tab'
    >
      {
        installerInnovation.day_3.map((conference) => (
          <div class='flex flex-col md:flex-row gap-4 md:gap-6 text-white my-5 bg-black/60 shadow-lg p-6 rounded-lg'>
            <div class='flex items-center gap-2 p-3 text-sm md:text-lg'>
              <svg
                xmlns='http://www.w3.org/2000/svg'
                fill='none'
                viewBox='0 0 24 24'
                stroke-width='1.5'
                stroke='currentColor'
                class='size-6 md:size-8'
              >
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  d='M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z'
                />
              </svg>
            </div>

            <div class='flex flex-col md:flex-row md:items-center md:space-x-4 w-full'>
              <div class='flex-1 gap-2 p-3' />

              <div class='gap-10 p-3' />
            </div>
          </div>
        ))
      }
    </div>
  </main>
</LayoutFreeContent>

<div class='mx-auto flex mt-10'>
  <a
    href='/doc/ENLIGHTENMENT-AREA-202-ESP-111424.pdf'
    target='_blank'
    class='button mx-auto text-3xl md:text-6xl font-bold'
  >
    <p></p>Saber m√°s</a
  >
  <svg fill='currentColor' viewBox='0 0 24 24' class='icon mr-5 my-2'>
    <path
      clip-rule='evenodd'
      d='M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm4.28 10.28a.75.75 0 000-1.06l-3-3a.75.75 0 10-1.06 1.06l1.72 1.72H8.25a.75.75 0 000 1.5h5.69l-1.72 1.72a.75.75 0 101.06 1.06l3-3z'
      fill-rule='evenodd'></path>
  </svg>
</div>

<style>
  body {
    background-color: rgb(255, 255, 255);
    color: rgb(0, 0, 0);
  }
  .button {
    position: relative;
    transition: all 0.3s ease-in-out;
    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
    padding-block: 0.5rem;
    padding-inline: 1.25rem;
    background: rgb(188, 1, 0);
    background: linear-gradient(
      90deg,
      rgba(188, 1, 0, 1) 0%,
      rgba(215, 105, 1, 1) 100%
    );
    border-radius: 9999px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: #ffff;
    gap: 10px;
    font-weight: bold;
    border: 3px solid #ffffff4d;
    outline: none;
    overflow: hidden;
    font-size: 15px;
  }

  .icon {
    width: 24px;
    height: 24px;
    transition: all 0.3s ease-in-out;
  }

  .button:hover {
    transform: scale(1.05);
    border-color: #fff9;
  }

  .button:hover .icon {
    transform: translate(4px);
  }

  .button:hover::before {
    animation: shine 1.5s ease-out infinite;
  }

  .button::before {
    content: '';
    position: absolute;
    width: 100px;
    height: 100%;
    background-image: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 30%,
      rgba(255, 255, 255, 0.8),
      rgba(255, 255, 255, 0) 70%
    );
    top: 0;
    left: -100px;
    opacity: 0.6;
  }

  @keyframes shine {
    0% {
      left: -100px;
    }

    60% {
      left: 100%;
    }

    to {
      left: 100%;
    }
  }

  @keyframes show {
    from {
      opacity: 0;
      scale: 10%;
    }
    to {
      opacity: 1;
      scale: 100%;
    }
  }
  .die {
    view-timeline-name: --card;
    view-timeline-axis: block;

    animation-timeline: --card;
    animation-name: show;

    animation-range: entry 60% cover 60%;
    animation-fill-mode: both;
  }
</style>
